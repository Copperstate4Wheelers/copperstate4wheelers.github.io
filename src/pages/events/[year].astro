---
interface Props {
  // link to the next year
  next?: string;

  // link to the previous year
  prev?: string;
}

import BaseLayout from "@layouts/BaseLayout.astro";
import EventListing from "@components/event/Listing.astro";

/* Calculate years based on the available event listings. */
import * as events from "@lib/events";
import type { GetStaticPaths, GetStaticPathsResult } from "astro";

export const getStaticPaths = (async () => {
  const results: GetStaticPathsResult = [];
  const years = await events.getAllYears();
  for (let year of years) {
    results.push({
      params: { year },
      props: {
        next: years.has(year + 1) ? `/events/${year + 1}` : undefined,
        prev: years.has(year - 1) ? `/events/${year - 1}` : undefined,
      },
    });
  }
  return results;
}) satisfies GetStaticPaths;

const year = parseInt(Astro.params.year! as string);
const { next, prev } = Astro.props;

const eventsForYear = await events.getEventsForYear(year! as number);
---

<BaseLayout title={`CS4W: Events ${year}`}>
  <div class="page-header wide">
    <h2>Club Events: {year}</h2>
    <nav>
      {prev && <a href={prev}>&lt Previous Year</a>}
      |
      {next && <a href={next}>Next year &gt</a>}
    </nav>
  </div>

  {
    eventsForYear.map((month) => {
      const monthName = month[0].dateTime.monthLong;
      return (
        <section class="month wide" aria-labelledby={monthName}>
          <h3 class="month-name">{monthName}</h3>
          <div class="">
            {month.map((event) => (
              <EventListing event={event} class="month-event-card" />
            ))}
          </div>
        </section>
      );
    })
  }
</BaseLayout>

<style>
  .page-header {
    display: flex;
    gap: var(--fs-400);
    flex-flow: row wrap;
    align-items: center;
    justify-content: space-between;

    nav {
      font-size: var(--fs-400);
    }
  }

  .month {
    .month-event-card {
      margin-block: var(--fs-400);
    }
  }

  @media screen and (width > 50rem) {
    .month {
      font-size: var(--fs-400);
      display: grid;
      grid-template-columns: 10rem 1fr;
      gap: 1em;

      .month-name {
        align-self: start;
        justify-self: end;
        position: sticky;
        top: 1em;
        text-align: right;
      }
    }
  }
</style>
