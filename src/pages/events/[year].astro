---
interface Props {
  // link to the next year
  next?: string;

  // link to the previous year
  prev?: string;
}

import BaseLayout from "@layouts/BaseLayout.astro";
import EventListing from "@components/EventListing.astro";

/* Calculate years based on the available event listings. */
import * as events from "@lib/events";
import type { GetStaticPaths, GetStaticPathsResult } from "astro";

export const getStaticPaths = (async () => {
  const results: GetStaticPathsResult = [];
  const years = await events.getAllYears();
  for (let year of years) {
    results.push({
      params: { year },
      props: {
        next: years.has(year + 1) ? `/events/${year + 1}` : undefined,
        prev: years.has(year - 1) ? `/events/${year - 1}` : undefined,
      },
    });
  }
  return results;
}) satisfies GetStaticPaths;

const year = parseInt(Astro.params.year! as string);
const { next, prev } = Astro.props;

const eventsForYear = await events.getEventsForYear(year! as number);
---

<BaseLayout title={`CS4W: Events ${year}`}>
  <div class="container events-page">
    <div class="events-page-header">
      <h2>Club Events: {year}</h2>
      <nav>
        {prev && <a href={prev}>&lt Previous Year</a>}
        |
        {next && <a href={next}>Next year &gt</a>}
      </nav>
    </div>

    {
      eventsForYear.map((month) => {
        const monthName = month[0].dateTime.monthLong;
        return (
          <section class="month" aria-labelledby={monthName}>
            <h3 class="month-name">{monthName}</h3>
            {month.map((event) => (
              <EventListing event={event} class="month-event-card" />
            ))}
          </section>
        );
      })
    }
  </div>
</BaseLayout>

<style>
  .container {
    padding: 1rem;
    max-width: 60rem;
    margin: auto;
  }

  h2 {
    font-size: 4rem;
    padding: 0;
    margin: 0;
  }

  h3 {
    font-size: 3.75rem;
  }

  .month-event-card {
    margin: 1rem 0;
  }

  .events-page-header {
    a {
      font-size: 1.25rem;
    }
  }

  @media screen and (width > 1024px) {
    .month {
      display: grid;
      grid-template-columns: 10rem 1fr;
      gap: 0 1rem;
    }

    .month-name {
      grid-column: 1;
      margin: 0;
      text-align: right;
      align-self: start;
      justify-self: right;
      position: sticky;
      top: 1rem;
    }

    .month-event-card {
      grid-column: 2;
    }

    .events-page-header {
      display: flex;
      align-items: baseline;
      justify-content: space-between;
      margin-bottom: 2rem;
    }
  }
</style>
