---
interface Props {
  // link to the next year
  next?: string;

  // link to the previous year
  prev?: string;
}

import BaseLayout from "@layouts/BaseLayout.astro";
import EventListing from "@components/EventListing.astro";

/* Calculate years based on the available event listings. */
import * as events from "@lib/events";
import type { GetStaticPaths, GetStaticPathsResult } from "astro";

export const getStaticPaths = (async () => {
  const results: GetStaticPathsResult = [];
  const years = await events.getAllYears();
  for (let year of years) {
    results.push({
      params: { year },
      props: {
        next: years.has(year + 1) ? `/events/${year + 1}` : undefined,
        prev: years.has(year - 1) ? `/events/${year - 1}` : undefined,
      },
    });
  }
  return results;
}) satisfies GetStaticPaths;

const year = parseInt(Astro.params.year! as string);
const { next, prev } = Astro.props;

const eventsForYear = await events.getEventsForYear(year! as number);
---

<BaseLayout title={`CS4W: ${year}`}>
  <div class="container events-page">
    <h2>Club Events: {year}</h2>
    {prev && <a href={prev}>&lt Previous Year</a>}
    |
    {next && <a href={next}>Next year &gt</a>}

    <ul>
      {
        eventsForYear.map((event) => {
          return (
            <li>
              <EventListing event={event} />
            </li>
          );
        })
      }
    </ul>
  </div>
</BaseLayout>

<style>
  .container {
    padding: 1rem;
  }

  h2 {
    font-size: 4rem;
    padding: 0;
    margin: 0;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  li {
    padding: 0;
    margin: 1rem 0rem;
  }
</style>
