---
interface Props {
  event: ParsedEvent;
}

/**
 * Get static paths.
 **/
import { getEventsCollection } from "@lib/events";
import type { GetStaticPaths, GetStaticPathsResult } from "astro";
export const getStaticPaths = (async () => {
  const events = await getEventsCollection();

  const results: GetStaticPathsResult = [];

  events.forEach((event) => {
    results.push({
      params: {
        event: event.id,
      },
      props: { event },
    });
  });

  console.log(results);

  return results;
}) satisfies GetStaticPaths;

/**
 * Per-Event page render.
 **/

import type { ParsedEvent } from "@lib/events";
import { DateTime } from "luxon";
import { render } from "astro:content";

import BaseLayout from "@layouts/BaseLayout.astro";

import EventTime from "@components/event/Time.astro";
import EventLocation from "@components/event/Location.astro";
import EventInvite from "@components/event/Invite.astro";
import IconText from "@components/util/IconText.astro";

import "pages/events/_event_style.css";

const { event } = Astro.props;
const { Content } = await render(event);

const year = `${event.dateTime.year}`;
const month_day = `${event.dateTime.monthShort} ${event.dateTime.day}`;
---

<BaseLayout title={`CS4W: ${event.data.title} - ${month_day}`} hasBackground>
  <div class="content">
    <a class="event-backlink" href={`/events/${year}/`}>
      /events/{year}
    </a>

    <h2>{event.data.title}</h2>

    <div class="event-header fs-400">
      <IconText icon="mdi:calendar">
        {event.dateTime.toLocaleString(DateTime.DATE_HUGE)}
      </IconText>

      <EventTime event={event} />
      <EventLocation event={event} />
      <EventInvite event={event} class="invite-detail" />
    </div>

    <section class="page">
      <Content />
    </section>
  </div>
</BaseLayout>

<style>
  .content {
    background-color: var(--secondary);
    box-shadow: 0.1rem 0.1rem 0.4rem rgba(0, 0, 0, 0.5);
    padding-inline: var(--fs-300);
  }

  h2 {
    margin-bottom: 0;
  }

  .event-header {
    font-weight: 500;
    display: flex;
    flex-flow: column nowrap;
    gap: 0.5em;

    margin-bottom: 2em;

    &:after {
      position: relative;
      content: "";
      top: 1em;
      width: 100%;
      height: 1px;
      margin: 0 auto;
      background-color: var(--primary);
      opacity: 0.5;
    }
  }

  .invite-detail {
    max-width: fit-content;
  }

  .event-backlink {
    text-align: right;
    float: right;
  }
</style>
