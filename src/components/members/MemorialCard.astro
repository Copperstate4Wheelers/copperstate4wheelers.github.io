---
import path from "node:path";
import { Image } from "astro:assets";

interface Props {
  /**
   * The image path, relative to the src/assets/pages/members directory.
   **/
  imagePath: string;

  /**
   * The memorial card path, relative to the
   * src/assets/pages/members/in-memory-of directory.
   **/
  cardPath: string;

  /**
   * The caption to display beneath the image.
   **/
  caption: string;

  /**
   * The card image alt text. Defaults to the caption if unspecified.
   **/
  alt?: string;
}

function loadMemorialImages(): Record<string, ImageMetadata> {
  const members = import.meta.glob<{ default: ImageMetadata }>(
    "../../assets/pages/members/in-memory-of/*",
    { eager: true },
  );
  const filenames: Record<string, ImageMetadata> = {};
  for (const [imagePath, image] of Object.entries(members)) {
    filenames[path.basename(imagePath)] = image.default;
  }
  return filenames;
}

const { imagePath, cardPath, caption, alt = caption } = Astro.props;
const memberImages = loadMemorialImages();

if (!memberImages[imagePath]) {
  console.log(
    `Could not find ${imagePath} in \n${JSON.stringify(memberImages, null, 2)}`,
  );
}
if (!memberImages[cardPath]) {
  console.log(
    `Could not find ${cardPath} in \n${JSON.stringify(memberImages, null, 2)}`,
  );
}

const image = memberImages[imagePath]!;
const card = memberImages[cardPath];
---

<div class="memorial-card">
  <div class="images">
    <Image src={image} alt={alt} />
    <Image src={card} alt={alt} />
  </div>
</div>

<style>
  .memorial-card {
    display: inline-block;
    max-width: 100%;

    background-color: var(--secondary-300);
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0.05rem 0.05rem 0.3rem rgba(0, 0, 0, 0.4);

    .images {
      display: column;
      align-items: center;
      justify-content: center;
      background-color: white;
    }

    &:hover,
    &:focus-visible {
      box-shadow: 0.1rem 0.1rem 0.4rem rgba(0, 0, 0, 0.45);
    }

    img {
      display: block;
      object-fit: cover;
      width: 100%;
      max-width: 100%;
    }
  }
</style>
