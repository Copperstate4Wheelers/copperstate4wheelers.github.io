---
/**
 * A subnavigation menu for a region of the website with multiple subpages.
 **/
interface Props {
  /**
   * Links should be provided in the form ["/link/to/page", "link text"].
   **/
  links: [string, string][];
  class?: string;
}

/**
 * Automatically generate the href and class for topic links. This makes it
 * easy to apply additional styling to the active topic link.
 **/
function navLink(href: string): any {
  const { url } = Astro;
  const pathname = url.pathname.replace(/\/$/, ""); // trim trailing slash

  let className = "subnav-link";

  if (pathname.endsWith(href)) {
    className += " active-subnav-link";
  }
  return { href: `${href}#article`, class: className };
}

const { links, class: className = "", ...rest } = Astro.props;
---

<nav class={`fullwidth ${className}`} transition:animate="none" {...rest}>
  <ul class="subpage-nav fs-400">
    {
      links.map(([href, content]) => {
        return (
          <li>
            <a {...navLink(href)}>{content}</a>
          </li>
        );
      })
    }
  </ul>
  <a id="article"></a>
</nav>

<style>
  .overline {
    text-transform: uppercase;
    font-size: var(--fs-300);
  }

  nav {
    margin-bottom: var(--fs-400);
  }

  .subpage-nav {
    --column-width: 10rem;
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-flow: row wrap;
    justify-content: center;

    li {
      margin: 0;
      padding: 0;
    }

    a {
      text-decoration: none;
    }
  }

  .subnav-link {
    display: inline-block;
    font-size: var(--fs-400);
    font-weight: 500;
    padding: 0.5rem;
    color: var(--primary);
    text-align: center;

    border: 0.2rem solid var(--primary);

    &:hover,
    &:focus-visible {
      background: var(--accent-300);
    }
  }

  .active-subnav-link {
    position: relative;
    background: var(--accent);
  }
</style>
